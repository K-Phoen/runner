#!/usr/bin/env python

import argparse, time
from runner import dump_to_file, parse_from_file, Fusion

def date_to_timestamp(date):
    return int(time.mktime(date.timetuple()))

def report(activity, name):
    timestamp_start = date_to_timestamp(activity.started_at)
    timestamp_end = date_to_timestamp(activity.completed_at)

    print('------------- %s -------------' % name)
    print('Total distance: %d meters' % activity.distance)
    print('Started at: %s (%d)' % (activity.started_at, timestamp_start))
    print('Completed at: %s (%d)\n' % (activity.completed_at, timestamp_end))

def parse_args(args=None):
    parser = argparse.ArgumentParser(
        description='Merge two activity files'
    )
    parser.add_argument(
        '-m', '--main', type=str, required=True,
        help='File to read the main data from.',
    )
    parser.add_argument(
        '-c', '--cardio', type=str, required=True,
        help='File to read the cardio data from.',
    )
    parser.add_argument(
        '-o', '--output', type=str, required=True,
        help='File to write the output to.',
    )

    return parser.parse_args(args)

def main():
    options = parse_args()

    # read the files
    main_activity = parse_from_file(options.main)
    cardio_activity = parse_from_file(options.cardio)

    # print a few info on the two activities
#    report(main_activity, 'MAIN')
#    report(cardio_activity, 'CARDIO')

    # start the fusion
    fusion = Fusion()
    fusion.merge_activities(main_activity, cardio_activity)

    # and dump the result
    dump_to_file(main_activity, options.output)

if __name__ == '__main__':
    main()
